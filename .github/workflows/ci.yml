name: CI

on: [push, pull_request]

env:
  node_version: 22.14.0
  POSTGRES_IDENTITY_PORT: 5433
  POSTGRES_URL_SHORTENER_PORT: 5434

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres-identity:
        image: postgres:14
        env:
          POSTGRES_DB: identity_db
          POSTGRES_USER: identity_user
          POSTGRES_PASSWORD: identity_password
        ports:
          - ${{ vars.POSTGRES_IDENTITY_PORT }}:5432 # Alterado para vars
        options: >-
          --health-cmd "pg_isready -U identity_user -d identity_db"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      postgres-url:
        image: postgres:14
        env:
          POSTGRES_DB: url_shortener_db
          POSTGRES_USER: url_shortener_user
          POSTGRES_PASSWORD: url_shortener_password
        ports:
          - ${{ vars.POSTGRES_URL_SHORTENER_PORT }}:5432 # Alterado para vars
        options: >-
          --health-cmd "pg_isready -U url_shortener_user -d url_shortener_db"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup environment file
        run: cp .env.example .env

      - name: Enable corepack
        run: corepack enable

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.node_version }}
          cache: yarn

      - name: Install dependencies
        run: yarn install --immutable

      - name: Lint and format
        run: yarn lint && yarn format

      - name: Unit tests
        run: yarn test:unit

      - name: Wait for databases
        timeout-minutes: 2
        run: |
          npx wait-on tcp:localhost:${{ env.POSTGRES_IDENTITY_PORT }}
          npx wait-on tcp:localhost:${{ env.POSTGRES_URL_SHORTENER_PORT }}

      - name: Run E2E tests
        env:
          DB_IDENTITY_HOST: localhost
          DB_IDENTITY_PORT: ${{ env.POSTGRES_IDENTITY_PORT }}
          DB_URL_SHORTENER_HOST: localhost
          DB_URL_SHORTENER_PORT: ${{ env.POSTGRES_URL_SHORTENER_PORT }}
        run: yarn test:e2e

      - name: Cleanup
        if: always()
        run: |
          docker compose down --remove-orphans
          rm -f .env
